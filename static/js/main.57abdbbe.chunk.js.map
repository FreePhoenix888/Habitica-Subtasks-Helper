{"version":3,"sources":["reportWebVitals.js","components/Anchor/Anchor.tsx","components/Label/Label.tsx","components/Paragraph/Paragraph.tsx","components/Code/Code.tsx","components/Form/Form.tsx","components/Form/InputErrorMessage.tsx","helpers/setClassName.tsx","helpers/useLocalStorage.tsx","components/Input/Input.tsx","components/TextArea/TextArea.tsx","components/Radio/Radio.tsx","components/Radio/RadioGroup.tsx","media/images/icons/github.svg","components/Modal/Modal.tsx","components/Modal/ModalsStorage.tsx","helpers/getScrollBarWidth.tsx","media/images/icons/star.svg","components/Header/Header.tsx","components/Button/Button.tsx","components/Button/InfoButton.tsx","components/Button/SubmitButton.tsx","components/Input/InputAutoSize.tsx","components/App/App.tsx","index.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","catch","error","console","log","Anchor","className","children","rest","Label","Paragraph","Code","Form","InputErrorMessage","setClassName","modifiers","classNames","trim","split","allModifiers","forEach","modifier","outputClassNames","Object","entries","modifiedClassName","map","push","join","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","storedValue","setStoredValue","value","valueToStore","setItem","stringify","Input","forwardRef","ref","classNameModifiers","displayName","TextArea","Radio","props","labelClassName","id","checked","htmlFor","type","RadioGroup","radiosData","name","onChange","renderRadios","useCallback","radioData","_path","Modal","api","modalBackgroundRef","createRef","useEffect","current","focus","role","tabIndex","onClick","event","target","Element","classList","contains","remove","onKeyDown","ctrlKey","metaKey","shiftKey","altKey","code","preventDefault","modalsStorageApi","add","ModalsStorage","modalsData","setModalsData","bodyStyle","document","body","style","length","bodyPaddingRight","paddingRight","parseInt","innerWidth","documentElement","clientWidth","overflow","modalContent","uuidv4","prevState","filter","modalData","_extends","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgGithub","_ref","svgRef","title","titleId","xmlns","x","y","width","height","viewBox","enableBackground","xmlSpace","fill","d","ForwardRef","Header","href","rel","Button","InfoButton","SubmitButton","SvgStar","InputAutoSize","forwardedRef","onInputProp","onInput","useRef","setSize","input","placeholder","size","useImperativeHandle","App","remainedRequestsLimit","setRemainedRequestsLimit","isPersonalDataUsingAccepted","setIsPersonalDataUsingAccepted","setTimeout","userId","setUserId","apiToken","setApiToken","useForm","defaultValues","register","control","handleSubmit","errors","formState","getSubtasks","subtasks","separator","subtask","action","onSubmit","data","text","notes","priority","amount","headers","processedSubtasks","checklist","promises","successfullRequests","Promise","resolve","reject","fetch","method","response","a","json","responseBody","ok","remainingRequestsAmount","Number","get","remainingRequestsAmountResetDate","Date","getTime","all","toast","wordBreak","message","autoComplete","required","rows","wrap","defaultValue","render","field","parseFloat","currentTarget","rules","valueAsNumber","validate","isNaN","max","min","open","ReactDOM","StrictMode","getElementById"],"mappings":"waAaeA,EAZS,SAAAC,GAChBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAgD,IAA9CC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QACxDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MACTQ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,O,oGCJzBG,EAAS,SAAC,GAAD,QAAEC,iBAAF,MAAc,GAAd,EAAkBC,EAAlB,EAAkBA,SAAaC,EAA/B,wBAA8D,2CAChFF,UAAS,0CAAqCA,IAAiBE,GADiB,aACVD,M,wBCD7DE,EAAoB,SAAC,GAAD,QAAEH,iBAAF,MAAc,GAAd,EAAqBE,EAArB,wBAA+B,mCAC5DF,UAAS,yCAAoCA,IAAiBE,K,wBCDrDE,EAAwB,SAAC,GAAD,QAAEJ,iBAAF,MAAc,GAAd,EAAqBE,EAArB,wBAA+B,+BAChEF,UAAS,6CAAwCA,IAAiBE,K,wBCDzDG,EAAmB,SAAC,GAAD,QAAEL,iBAAF,MAAc,GAAd,EAAqBE,EAArB,wBAAuC,kCACnEF,UAAS,wCAAmCA,IAAiBE,K,wBCDpDI,EAAO,SAAC,GAAD,IAAEN,EAAF,EAAEA,UAAcE,EAAhB,wBAA+C,kCAC/DF,UAAS,wCAAmCA,IAAiBE,KCApDK,EAAgC,SAAC,GAAD,IAAEN,EAAF,EAAEA,SAAF,OAAgB,sBACzDD,UAAU,uHAD+C,UAEzD,sBACIA,UAAU,uFAAsF,+BAAOC,Q,qBCTxG,SAASO,IAGL,IAFPR,EAEM,uDAFM,GACZS,EACM,uDAD+B,GAE/BC,EAAaV,EAAUW,OAAOC,MAAM,KACpCC,EAAeJ,EACrBC,EAAWI,SAAQ,SAAAd,GACf,IAAMe,EAAWf,EAAUY,MAAM,MAAM,GACpCG,IAAUF,EAAaE,IAAY,MAE1C,IAAMC,EAAgB,YAAON,GAW7B,OAVIG,GACAI,OAAOC,QAAQL,GAAcC,SAAQ,YAA4B,IAAD,mBAAzBC,EAAyB,KAC5D,GAD4D,KAC7C,CACX,IAAMI,EAAoBT,EAAWU,KACjC,SAACpB,GAAD,gBAAkBA,EAAlB,aAAgCe,MAEpCC,EAAiBK,KAAjB,MAAAL,EAAgB,YAASG,QAI9BH,EAAiBM,KAAK,KCjB1B,IAAMC,EAAoC,SAAoBC,EAAaC,GAC9E,MAAsCC,oBAAY,WAC9C,IAAMC,EAAOC,OAAOC,aAAaC,QAAQN,GAEzC,OAAOG,EAAQI,KAAKC,MAAML,GAAcF,KAH5C,mBAAOQ,EAAP,KAAoBC,EAApB,KAcA,MAAO,CAACD,EARR,SAAkBE,GACd,IAAMC,EAAeD,aAAiB/C,SAAW+C,EAAMF,GAAeE,EAEtED,EAAeE,GAEfR,OAAOC,aAAaQ,QAAQb,EAAKO,KAAKO,UAAUF,O,6CCR3CG,EAAQC,sBAAqC,WAIYC,GAJZ,QACKzC,iBADL,MACiB,GADjB,EAEK0C,EAFL,EAEKA,mBACGxC,EAHR,wBAIiC,mCACvFF,UAAWQ,EAAa,kCAAD,OAAmCR,GAAa0C,GACvED,IAAKA,GACDvC,OACRqC,EAAMI,YAAc,8B,0BCXPC,EAAWJ,sBAAwC,WAAoCC,GAApC,QAAEzC,iBAAF,MAAc,GAAd,EAAqBE,EAArB,wBAC5D,kDACIF,UAAS,4CAAuCA,IAAiBE,GADrE,IAC2EuC,IAAKA,QACpFG,EAASD,YAAc,iC,sDCAhB,SAASE,EAAMC,GAClB,MAAiEA,EAA1DC,sBAAP,MAAwB,GAAxB,IAAiED,EAArC9C,iBAA5B,MAAwC,GAAxC,EAA4CC,EAAqB6C,EAArB7C,SAAaC,EAAzD,YAAiE4C,EAAjE,GACOE,EAAeF,EAAfE,GACDN,EAAqB,CACvBO,QAFkBH,EAAXG,SAKX,OACI,wBACIjD,UAAWQ,EAAa,kCAAD,OAAmCuC,GAAkBL,GAC5EQ,QAASF,EAFb,UAIK/C,EACD,mCACID,UAAWQ,EAAa,yCAAD,OACsBR,GACzC0C,GAEJS,KAAK,SACDjD,O,iECZb,SAASkD,EAAT,GAAwG,IAAnFC,EAAkF,EAAlFA,WAAYC,EAAsE,EAAtEA,KAAsE,IAAhEtD,iBAAgE,MAApD,GAAoD,EAAhDmC,EAAgD,EAAhDA,MAAOoB,EAAyC,EAAzCA,SAAarD,EAA4B,iBACpGsD,EAAeC,uBAAY,kBAAMJ,EAAWjC,KAAI,SAAAsC,GAAS,OAAI,wBAACb,EAAD,yBAAOI,QAASd,IAAUuB,EAAUvB,MAC7BmB,KAAMA,GAAUI,GADvB,IAEOlC,IAAKkC,EAAUV,GACfO,SAAUA,UAAc,CAACF,EAAYlB,EAAOmB,EAAMC,IAC5H,OACI,6CACIvD,UAAS,+CAA0CA,IAC/CE,GAFR,aAIKsD,O,UCzBTG,ECWEC,EAAQ,SAAC,GAA8C,IAA7C3D,EAA4C,EAA5CA,SAAU+C,EAAkC,EAAlCA,GAAIa,EAA8B,EAA9BA,IACpBC,EAAqBC,sBAK3B,OAJAC,qBAAU,WACNF,EAAmBG,QAAQC,WAGxB,qBAAKlE,UAAU,2CAA2CyC,IAAKqB,EAAoBK,KAAK,SACnFC,UAAW,EACXC,QAAS,SAACC,GACN,IAAOC,EAAUD,EAAVC,OACDA,aAAkBC,UAClBD,EAAOE,UAAUC,SAAS,iDAAmDH,EAAOE,UAAUC,SAAS,8CAC7Gb,EAAIc,OAAO3B,IAGf4B,UAAW,SAACN,GACaA,EAAMO,SAAWP,EAAMQ,SAAWR,EAAMS,UAAYT,EAAMU,QAAyB,QAAfV,EAAMW,MAAiC,OAAfX,EAAMW,MAEnHpB,EAAIc,OAAO3B,GAEI,QAAfsB,EAAMW,MAAgBX,EAAMY,kBAdzC,SAiBH,sBAAKlF,UAAU,iCAAf,UACI,qBAAKA,UAAU,0CAAf,SAA0DC,IAC1D,wBAAQD,UAAU,+CAA+CoE,UAAW,EAAGjB,KAAK,SAApF,4DCxBCgC,EAAsC,CAC/CC,IAAK,KACLT,OAAQ,MAGCU,EAAoB,WAC7B,MAAoC3D,mBAAgC,IAApE,mBAAO4D,EAAP,KAAmBC,EAAnB,KACAvB,qBAAU,WACN,IAAMwB,EAAYC,SAASC,KAAKC,MAChC,GAA0B,IAAtBL,EAAWM,OAAc,CACzB,IAAMC,EAA8C,KAA3BL,EAAUM,aAAsB,EAAIC,SAASP,EAAUM,aAAc,IAC9FN,EAAUM,aAAV,UAA4BD,GCvBOjE,OAAOoE,WAAaP,SAASQ,gBAAgBC,aDuBhF,MACAV,EAAUW,SAAW,cAErBX,EAAUM,aAAV,GACAN,EAAUW,SAAW,MAa7B,OAFAhB,EAAiBC,IARL,SAACgB,GACT,IAAMpD,EAAKqD,cAEX,OADAd,GAAe,SAAAe,GAAS,4BAAQA,GAAR,CAAmB,CAACrG,SAAUmG,EAAcpD,WAC7DA,GAMXmC,EAAiBR,OAJF,SAAC3B,GACZuC,GAAc,SAAAe,GAAS,OAAIA,EAAUC,QAAO,SAAAC,GAAS,OAAIA,EAAUxD,KAAOA,SAIvE,mCAAGsC,EAAWlE,KAAI,SAAAoF,GAAS,OAAI,cAAC,EAAD,CAAO3C,IAAKsB,EAAkBnC,GAAIwD,EAAUxD,GAA5C,SAC2BwD,EAAUvG,UAAzBuG,EAAUxD,U,gBFvC5D,EAAY,CAAC,QAAS,WAE1B,SAASyD,IAA2Q,OAA9PA,EAAWxF,OAAOyF,QAAU,SAAUnC,GAAU,IAAK,IAAIoC,EAAI,EAAGA,EAAIC,UAAUhB,OAAQe,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAInF,KAAOqF,EAAc5F,OAAO6F,UAAUC,eAAeC,KAAKH,EAAQrF,KAAQ+C,EAAO/C,GAAOqF,EAAOrF,IAAY,OAAO+C,IAA2B0C,MAAMC,KAAMN,WAEhT,SAASO,EAAyBN,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkErF,EAAKmF,EAAnEpC,EAEzF,SAAuCsC,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2DrF,EAAKmF,EAA5DpC,EAAS,GAAQ8C,EAAapG,OAAOqG,KAAKT,GAAqB,IAAKF,EAAI,EAAGA,EAAIU,EAAWzB,OAAQe,IAAOnF,EAAM6F,EAAWV,GAAQS,EAASG,QAAQ/F,IAAQ,IAAa+C,EAAO/C,GAAOqF,EAAOrF,IAAQ,OAAO+C,EAFxMiD,CAA8BX,EAAQO,GAAuB,GAAInG,OAAOwG,sBAAuB,CAAE,IAAIC,EAAmBzG,OAAOwG,sBAAsBZ,GAAS,IAAKF,EAAI,EAAGA,EAAIe,EAAiB9B,OAAQe,IAAOnF,EAAMkG,EAAiBf,GAAQS,EAASG,QAAQ/F,IAAQ,GAAkBP,OAAO6F,UAAUa,qBAAqBX,KAAKH,EAAQrF,KAAgB+C,EAAO/C,GAAOqF,EAAOrF,IAAU,OAAO+C,EAMne,SAASqD,EAAUC,EAAMC,GACvB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACflF,EAAQqE,EAAyBU,EAAM,GAE3C,OAAoB,gBAAoB,MAAOpB,EAAS,CACtDwB,MAAO,6BACPC,EAAG,MACHC,EAAG,MACHC,MAAO,OACPC,OAAQ,OACRC,QAAS,cACT3C,MAAO,CACL4C,iBAAkB,mBAEpBC,SAAU,WACVC,KAAM,kBACNhG,IAAKqF,EACL,kBAAmBE,GAClBlF,GAAQiF,EAAqB,gBAAoB,QAAS,CAC3D/E,GAAIgF,GACHD,GAAS,KAAMpE,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3E+E,EAAG,opEAIP,IItCI,EJsCAC,EAA0B,aAAiBf,G,GAChC,I,gCK9BFgB,EAAa,SAAC,GAAD,IAAE3I,EAAF,EAAEA,SAAF,IAAYD,iBAAZ,MAAwB,GAAxB,EAA+BE,EAA/B,wBACtB,qCACI,8CAAKF,UAAS,iBAAYA,IAAiBE,GAA3C,cACI,cAAC,EAAD,CAAQ2I,KAAK,6DAA6DC,IAAI,sBACtEvE,OAAO,SADf,SACwB,cAAC,EAAD,MACvBtE,MAEL,cAAC,IAAD,Q,wBCXK8I,EAAS,SAAC,GAAD,IAAE/I,EAAF,EAAEA,UAAcE,EAAhB,wBAA+C,kDAAYA,GAAZ,IACQF,UAAS,0CAAqCA,GAC9CmD,KAAK,a,iBCFrE6F,GAAyB,SAAC,GAAD,IAAEhJ,EAAF,EAAEA,UAAcE,EAAhB,yBAA0B,cAAC,EAAD,yBAC5DF,UAAS,+CAA0CA,IAAiBE,GADR,qB,iBCAnD+I,GAAe,SAACnG,GACzB,IAAO9C,EAAsB8C,EAAtB9C,UAAcE,EAArB,YAA6B4C,EAA7B,IACA,OAAO,oCAAQ9C,UAAWQ,EAAa,mCAAD,OAAoCR,IAAcmD,KAAK,UAAajD,K,SJL1G,GAAY,CAAC,QAAS,WAE1B,SAAS,KAA2Q,OAA9P,GAAWe,OAAOyF,QAAU,SAAUnC,GAAU,IAAK,IAAIoC,EAAI,EAAGA,EAAIC,UAAUhB,OAAQe,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAInF,KAAOqF,EAAc5F,OAAO6F,UAAUC,eAAeC,KAAKH,EAAQrF,KAAQ+C,EAAO/C,GAAOqF,EAAOrF,IAAY,OAAO+C,IAA2B0C,MAAMC,KAAMN,WAEhT,SAAS,GAAyBC,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkErF,EAAKmF,EAAnEpC,EAEzF,SAAuCsC,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2DrF,EAAKmF,EAA5DpC,EAAS,GAAQ8C,EAAapG,OAAOqG,KAAKT,GAAqB,IAAKF,EAAI,EAAGA,EAAIU,EAAWzB,OAAQe,IAAOnF,EAAM6F,EAAWV,GAAQS,EAASG,QAAQ/F,IAAQ,IAAa+C,EAAO/C,GAAOqF,EAAOrF,IAAQ,OAAO+C,EAFxM,CAA8BsC,EAAQO,GAAuB,GAAInG,OAAOwG,sBAAuB,CAAE,IAAIC,EAAmBzG,OAAOwG,sBAAsBZ,GAAS,IAAKF,EAAI,EAAGA,EAAIe,EAAiB9B,OAAQe,IAAOnF,EAAMkG,EAAiBf,GAAQS,EAASG,QAAQ/F,IAAQ,GAAkBP,OAAO6F,UAAUa,qBAAqBX,KAAKH,EAAQrF,KAAgB+C,EAAO/C,GAAOqF,EAAOrF,IAAU,OAAO+C,EAMne,SAAS2E,GAAQrB,EAAMC,GACrB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACflF,EAAQ,GAAyB+E,EAAM,IAE3C,OAAoB,gBAAoB,MAAO,GAAS,CACtDO,MAAO,GACPC,OAAQ,GACRC,QAAS,YACTG,KAAM,OACNR,MAAO,6BACPxF,IAAKqF,EACL,kBAAmBE,GAClBlF,GAAQiF,EAAqB,gBAAoB,QAAS,CAC3D/E,GAAIgF,GACHD,GAAS,KAAM,IAAU,EAAqB,gBAAoB,OAAQ,CAC3EW,EAAG,iIACHD,KAAM,mBAIV,IAAI,GAA0B,aAAiBS,I,IAChC,I,wCKrBFC,GAAgB3G,sBAAqC,WAIY4G,GAAkB,IAHhBC,EAGe,EAHxBC,QACA5G,EAEwB,EAFxBA,mBACGxC,EACqB,kBACrFuC,EAAM8G,mBACNC,EAAU/F,uBAAY,WACxB,GAAKhB,EAAIwB,QAAT,CACA,IAAMwF,EAAQhH,EAAIwB,QAEb2B,EADW6D,EAATtH,MACFyD,OACAA,IAAQA,EAAS6D,EAAMC,YAAY9D,QACxC6D,EAAME,KAAO/D,KACd,CAACnD,IAEJuB,qBAAU,WACNwF,MACD,CAACA,IAEJI,8BAAwDR,GAAc,kBAAM3G,EAAIwB,WAEhF,IAAMqF,EAAU7F,uBAAY,SAACa,GAEzBkF,IAEIH,GACAA,EAAY/E,KAEjB,CAAC+E,EAAaG,IAEjB,OAAO,cAACjH,EAAD,aAAOG,mBAAkB,aAAG,aAAa,GAASA,GAAqBD,IAAKA,EACrE6G,QAASA,GAAapJ,OAGxCiJ,GAAcxG,YAAc,sCCrB5B,IA+UekH,GA/UC,WACZ,MAA0DnI,mBAAS,IAAnE,mBAAOoI,EAAP,KAA8BC,EAA9B,KACA,EAAsExI,EAAgB,+BAA+B,GAArH,mBAAOyI,EAAP,KAAoCC,EAApC,KACAjG,qBAAU,WACDgG,GACDE,YAAW,WACP/E,EAAiBC,IAAI,gCACjB,cAAC,EAAD,2GAEA,kFAEJ6E,GAA+B,KAChC,OAER,CAACD,EAA6BC,IAYjC,MAA4B1I,EAAgB,SAAU,IAAtD,mBAAO4I,EAAP,KAAeC,EAAf,KACA,EAAgC7I,EAAgB,WAAY,IAA5D,mBAAO8I,EAAP,KAAiBC,EAAjB,KAEA,EAA+DC,aAAuB,CAClFC,cAAe,CACXL,SACAE,cAHDI,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,aAA0BC,EAApD,EAAwCC,UAAYD,OAO9CE,EAAcrH,uBAAY,SAACsH,EAAkBC,GAC/C,OAAKA,EACED,EAASnK,MAAMoK,GAAW5J,KAAI,SAAC6J,GAAD,OAAaA,EAAQtK,UADnC,OAExB,IAEH,OAAO,sBAAKX,UAAU,MAAf,UACH,cAAC,EAAD,IACA,cAAC,IAAD,IACA,cAAC,EAAD,IACA,sBAAKA,UAAU,YAAf,UACI,0DACA,eAAC,EAAD,CAAMkL,OAAO,GAAGlL,UAAU,gCAAgCuD,SAAU,WAChE1D,QAAQC,IAAI,WAEVqL,SAAUR,GAAa,SAACS,GACpB,IAAOjB,EAAqFiB,EAArFjB,OAAQE,EAA6Ee,EAA7Ef,SAAiBgB,EAA4DD,EAAnErD,MAAa5E,EAAsDiI,EAAtDjI,KAAMmI,EAAgDF,EAAhDE,MAAOC,EAAyCH,EAAzCG,SAAUR,EAA+BK,EAA/BL,SAAUC,EAAqBI,EAArBJ,UAAWQ,EAAUJ,EAAVI,OAClFpB,EAAUD,GACVG,EAAYD,GAiBZ,IAhBA,IAAMoB,EAAU,CACZ,eAAgB,mBAChB,WAAY,8DACZ,aAActB,EACd,YAAaE,GAEXqB,EAAoBZ,EAAYC,EAAUC,GAC1CtF,EAAO3D,KAAKO,UAAU,CACxB+I,OACAlI,OACAoI,WACAD,QACAK,UAAWD,IAETE,EAAgC,GAClCC,EAAsB,EACjBlF,EAAI,EAAGA,EAAI6E,EAAQ7E,IACxBiF,EAASvK,KAAK,IAAIyK,SAAQ,SAACC,EAASC,GAC3BC,MAAM,yCAA0C,CACjDC,OAAQ,OACRT,UACA/F,SAECrG,KALA,uCAKK,WAAO8M,GAAP,mBAAAC,EAAA,sEACyBD,EAASE,OADlC,OACIC,EADJ,OAEGH,EAASI,IAAIP,EAAOM,GACnBE,EAA0BC,OAAON,EAASV,QAAQiB,IAAI,0BACtDC,EAAmC,IAAIC,KAAKT,EAASV,QAAQiB,IAAI,sBACvE3C,EAAyByC,GACzBtC,YAAW,WACPH,EAAyB,MAC1B4C,EAAiCE,WAAY,IAAID,MAAOC,WAC3DhB,IACAE,EAAQO,GAVN,4CALL,2DAmBbR,QAAQgB,IAAIlB,GACPvM,MAAK,WACF0N,YAAM,wCAAgB,CAAC5J,KAAM,eAEhCxD,OAAM,SAACC,GACJC,QAAQC,IAAIF,GACQ,oBAAhBA,EAAMA,MACNmN,YAAM,oBACFpH,MAAO,CAACqH,UAAW,cADjB,yDAEMnB,KAA0B,CAClC1I,KAAM,UAGV4J,YAAM,mBACFpH,MAAO,CAACqH,UAAW,cADjB,SACiCpN,EAAMqN,UAAc,CACvD9J,KAAM,gBA3DhC,UAiEI,sBAAKnD,UAAU,yCAAf,UACI,cAAC,EAAD,CAAOA,UAAU,eAAekD,QAAQ,QAAxC,mBAGA,cAACX,EAAD,aAAO2K,aAAa,MACblN,UAAU,eACVgD,GAAG,QACHM,KAAK,QACLoG,YAAY,iCACRe,EAAS,QAAS,CAAC0C,SAAU,wBAEvCvC,EAAO7C,OAAS,cAAC,EAAD,UAAoB6C,EAAO7C,MAAMkF,aAEtD,sBAAKjN,UAAU,yCAAf,UACI,cAAC,EAAD,CAAOA,UAAU,kBAAkBkD,QAAQ,WAA3C,sBAGA,cAACN,EAAD,aAAUsK,aAAa,MACblN,UAAU,qBACVgD,GAAG,WACH0G,YAAW,wJAKX0D,KAAM,GACNC,KAAK,QACD5C,EAAS,iBAI3B,sBAAKzK,UAAU,yCAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,cAAC,EAAD,CAAOA,UAAU,wCAAwCkD,QAAQ,YAAjE,uBAGA,cAAC,GAAD,CAAYlD,UAAU,oDAAoDqE,QAAS,WAC/Ec,EAAiBC,IAAI,gCACjB,8DAAgC,cAAC,EAAD,iCAAhC,iCAGA,0CAJiB,IAIA,cAAC,EAAD,+DAA6D,uBAC9E,gCAAK,2CAAL,IAAuB,cAAC,EAAD,mBACvB,8BAAK,0CACL,+BACI,4DACA,kDACA,mDAKhB,cAAC+D,GAAD,aAAe+D,aAAa,MACblN,UAAU,mBACVsN,aAAa,GACbtK,GAAG,YACHM,KAAK,YACLoG,YAAY,OACRe,EAAS,kBAGhC,sBAAKzK,UAAU,yCAAf,UACI,cAAC,EAAD,CAAOA,UAAU,eAAekD,QAAQ,QAAxC,mBAGA,cAACN,EAAD,aAAUsK,aAAa,MACblN,UAAU,kBACVgD,GAAG,QACHM,KAAK,QACLoG,YAAY,mDACZ0D,KAAM,GACNC,KAAK,QACD5C,EAAS,cAG3B,sBAAKzK,UAAU,kDAAf,UACI,cAAC,EAAD,CAAOkD,QAAQ,YAAf,wBACA,cAAC,KAAD,CAAYwH,QAASA,EACT4C,aAAc,EACdhK,KAAK,WACLiK,OAAQ,oBAAEC,MAAQjK,EAAV,EAAUA,SAAUpB,EAApB,EAAoBA,MAAOmB,EAA3B,EAA2BA,KAA3B,OAAsC,cAACF,EAAD,CAC1CpD,UAAU,wBACVsD,KAAMA,EACND,WAAY,CACR,CACIlB,MAAO,GACPlC,SAAU,cAAC,GAAD,IACV+C,GAAI,eAER,CACIb,MAAO,EACPlC,SAAU,qCACN,cAAC,GAAD,IAAU,cAAC,GAAD,OACd+C,GAAI,aAER,CACIb,MAAO,IACPlC,SAAU,qCACN,cAAC,GAAD,IAAU,cAAC,GAAD,IAAU,cAAC,GAAD,OACxB+C,GAAI,eAER,CACIb,MAAO,EACPlC,SAAU,qCACN,cAAC,GAAD,IAAU,cAAC,GAAD,IAAU,cAAC,GAAD,IAAU,cAAC,GAAD,OAClC+C,GAAI,cAGZb,MAAOA,EACPoB,SAAU,SAACe,GAAD,OAAWf,EAASkK,WAAWnJ,EAAMoJ,cAAcvL,YAC7DwL,MAAO,CAACR,SAAU,8BAEtC,sBAAKnN,UAAU,yCAAf,UACI,cAAC,EAAD,CAAOkD,QAAQ,OAAf,kBACA,cAAC,KAAD,CAAYwH,QAASA,EACT4C,aAAa,OACbhK,KAAK,OACLiK,OAAQ,oBAAEC,MAAQjK,EAAV,EAAUA,SAAUpB,EAApB,EAAoBA,MAAOmB,EAA3B,EAA2BA,KAA3B,OAAsC,cAACF,EAAD,CAC1CpD,UAAU,qCACVsD,KAAMA,EACND,WAAY,CACR,CAAClB,MAAO,OAAQlC,SAAU,OAAQ+C,GAAI,kBACtC,CAACb,MAAO,QAASlC,SAAU,QAAS+C,GAAI,mBACxC,CAACb,MAAO,QAASlC,SAAU,QAAS+C,GAAI,oBAE5Cb,MAAOA,EACPoB,SAAUA,KACVoK,MAAO,CAACR,SAAU,yBAEtC,sBAAKnN,UAAU,+EAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,cAAC,EAAD,CAAOA,UAAU,gBAAgBkD,QAAQ,SAAzC,oBAGA,cAAC,GAAD,CAAY,cAAY,QACZ,aAAW,MACX,WAAS,wEAEzB,cAACX,EAAD,aACI2K,aAAa,MACblN,UAAU,gBACVsN,aAAc,EACdtK,GAAG,SACHM,KAAK,SACLoG,YAAY,IACZvG,KAAK,UACDsH,EAAS,SAAU,CACnBmD,eAAe,EAAMC,SAAU,SAAC1L,GAC5B,GAAIsK,OAAOqB,MAAM3L,GAAQ,MAAO,0BAEpC4L,IAAK,CACD5L,MAAO2H,EACPmD,QAAQ,8BAAD,OAAgCnD,IAE3CkE,IAAK,CAAC7L,MAAO,EAAG8K,QAAS,sBAGhCrC,EAAOY,QAAU,cAAC,EAAD,UAAoBZ,EAAOY,OAAOyB,aAExD,sBAAKjN,UAAU,yCAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,cAAC,EAAD,CAAOA,UAAU,uBAAuBkD,QAAQ,SAAhD,qBAGA,cAAC,GAAD,CAAYlD,UAAU,6BAA6BqE,QAAS,WACxDzC,OAAOqM,KAAK,yCAA0C,UAAU/J,cAGxE,cAAC3B,EAAD,aAAO2K,aAAa,MAAMlK,GAAG,SACtBM,KAAK,UAAamH,EAAS,SAAU,CAAC0C,SAAU,0BACtDvC,EAAOT,QAAU,cAAC,EAAD,UAAoBS,EAAOT,OAAO8C,aAExD,sBAAKjN,UAAU,yCAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,cAAC,EAAD,CAAOA,UAAU,uBAAuBkD,QAAQ,WAAhD,wBAGA,cAAC,GAAD,CAAYlD,UAAU,6BAA6BqE,QAAS,WACxDzC,OAAOqM,KAAK,yCAA0C,UAAU/J,cAIxE,cAAC3B,EAAD,aAAO2K,aAAa,MACblK,GAAG,WACHM,KAAK,YAAemH,EAAS,WAAY,CAAC0C,SAAU,4BAC1DvC,EAAOP,UAAY,cAAC,EAAD,UAAoBO,EAAOP,SAAS4C,aAE5D,qBAAKjN,UAAU,iBAAf,SACI,cAAC,GAAD,CAAcA,UAAS,gBAAmB,gBAAyC,IAA1B8J,EAC3C,cAAY,QACZ,aAAW,MAAM,WAAS,yBAC1B,mBAA4C,IAA1BA,EAClB,YAAU,QAJxB,gCC/TpBoE,IAASX,OACL,cAAC,IAAMY,WAAP,UACI,cAAC,GAAD,MAEJ1I,SAAS2I,eAAe,SAM5BlP,M","file":"static/js/main.57abdbbe.chunk.js","sourcesContent":["// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        }).catch(error => console.log(error));\n    }\n};\n\nexport default reportWebVitals;\n","import React, {HTMLProps} from \"react\";\nimport './anchor.scss';\n\ntype IProps = HTMLProps<HTMLAnchorElement>;\n\nexport const Anchor = ({className = '', children, ...rest}: IProps): JSX.Element => <a\n    className={`habitica-subtasks-helper-anchor ${className}`} {...rest}>{children}</a>;","import React, {FC, HTMLProps} from \"react\";\nimport './label.scss';\n\ntype IProps = HTMLProps<HTMLLabelElement>;\n\nexport const Label: FC<IProps> = ({className = '', ...rest}) => <label\n    className={`habitica-subtasks-helper-label ${className}`} {...rest} />","import React, {FC, HTMLProps} from \"react\";\nimport './paragraph.scss';\n\ntype IProps = HTMLProps<HTMLParagraphElement>;\n\nexport const Paragraph: FC<IProps> = ({className = '', ...rest}) => <p\n    className={`habitica-subtasks-helper-paragraph ${className}`} {...rest} />","import React, {FC, HTMLProps} from \"react\";\nimport './code.scss';\n\ntype IProps = HTMLProps<HTMLSpanElement>;\n\nexport const Code: FC<IProps> = ({className = '', ...rest}: IProps) => <code\n    className={`habitica-subtasks-helper-code ${className}`} {...rest} />","import React, {HTMLProps} from 'react';\nimport './form.scss';\n\ntype IProps = HTMLProps<HTMLFormElement>;\n\nexport const Form = ({className, ...rest}: IProps): JSX.Element => <form\n    className={`habitica-subtasks-helper-form ${className}`} {...rest} />","import React, {FC} from \"react\";\n\ninterface IProps {\n    children: JSX.Element | string;\n}\n\nexport const InputErrorMessage: FC<IProps> = ({children}) => <div\n    className=\"habitica-subtasks-helper-form-section__invalid-input-error habitica-subtasks-helper-form-section-invalid-input-error\">\n    <span\n        className=\"triangle-up habitica-subtasks-helper-form-section-invalid-input-error__triangle-up\"/><span>{children}</span>\n</div>","export function setClassName(\n    className = '',\n    modifiers: Record<string, boolean> = {}\n): string {\n    const classNames = className.trim().split(' ');\n    const allModifiers = modifiers;\n    classNames.forEach(className => {\n        const modifier = className.split('--')[1];\n        if(modifier) allModifiers[modifier] = true;\n    })\n    const outputClassNames = [...classNames];\n    if (allModifiers) {\n        Object.entries(allModifiers).forEach(([modifier, condition]) => {\n            if (condition) {\n                const modifiedClassName = classNames.map(\n                    (className) => `${className}--${modifier}`\n                );\n                outputClassNames.push(...modifiedClassName);\n            }\n        });\n    }\n    return outputClassNames.join(' ');\n}\n","import {Dispatch, SetStateAction, useState} from 'react';\n\ntype IUseLocalStorage = <T>(key: string, iniitialValue: T) => readonly [[T, Dispatch<SetStateAction<T>>][0], ((value: (((value: T) => T) | T)) => void)]\n\nexport const useLocalStorage: IUseLocalStorage = <T extends unknown>(key: string, initialValue: T) => {\n    const [storedValue, setStoredValue] = useState<T>(() => {\n        const item = window.localStorage.getItem(key);\n\n        return item ? (JSON.parse(item) as T) : initialValue;\n    });\n\n    function setValue(value: T | ((value: T) => T)) {\n        const valueToStore = value instanceof Function ? value(storedValue) : value;\n\n        setStoredValue(valueToStore);\n\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    }\n\n    return [storedValue, setValue] as const;\n}\n","import React, {forwardRef, HTMLProps} from 'react';\nimport './input.scss';\nimport {setClassName} from \"../../helpers\";\n\ninterface IProps extends HTMLProps<HTMLInputElement> {\n    classNameModifiers?: Record<string, boolean>;\n}\n\nexport const Input = forwardRef<HTMLInputElement, IProps>(({\n                                                               className = '',\n                                                               classNameModifiers,\n                                                               ...rest\n                                                           }: IProps, ref): JSX.Element => <input\n    className={setClassName(`habitica-subtasks-helper-input ${className}`, classNameModifiers)}\n    ref={ref}\n    {...rest} />)\nInput.displayName = 'HabiticaSubtasksHelperInput'","import React, {forwardRef, HTMLProps} from 'react';\nimport './textarea.scss';\n\ntype IProps = HTMLProps<HTMLTextAreaElement>;\n\nexport const TextArea = forwardRef<HTMLTextAreaElement, IProps>(({className = '', ...rest}: IProps, ref): JSX.Element =>\n    <textarea\n        className={`habitica-subtasks-helper-textarea ${className}`} {...rest} ref={ref}/>)\nTextArea.displayName = \"HabiticaSubtasksHelperTextArea\"\n\n","import React, {HTMLProps} from 'react';\nimport {setClassName} from '../../helpers/setClassName';\nimport './radio.scss';\n\ntype IProps = HTMLProps<HTMLInputElement> & {\n    labelClassName?: string;\n}\n\nexport function Radio(props: IProps): JSX.Element {\n    const {labelClassName = '', className = '', children, ...rest} = props;\n    const {id, checked} = props;\n    const classNameModifiers = {\n        checked,\n    };\n\n    return (\n        <label\n            className={setClassName(`habitica-subtasks-helper-radio ${labelClassName}`, classNameModifiers)}\n            htmlFor={id}\n        >\n            {children}\n            <input\n                className={setClassName(\n                    `habitica-subtasks-helper-radio__input ${className}`,\n                    classNameModifiers\n                )}\n                type=\"radio\"\n                {...rest}\n            />\n        </label>\n    );\n}\n","import React, {ComponentProps, HTMLProps, useCallback} from 'react';\nimport './radioGroup.scss';\nimport {Radio} from \"./Radio\";\n\ntype IRadioProps = ComponentProps<typeof Radio>;\ntype IRadioData = Pick<IRadioProps, 'children' | 'value' | 'id'>;\n\ninterface IProps extends HTMLProps<HTMLDivElement> {\n    className?: string;\n    defaultCheckedValue?: IProps[\"value\"];\n    name: string;\n    onChange: HTMLProps<HTMLInputElement>['onChange'];\n    radiosData: IRadioData[];\n}\n\nexport function RadioGroup({radiosData, name, className = '', value, onChange, ...rest}: IProps): JSX.Element {\n    const renderRadios = useCallback(() => radiosData.map(radioData => <Radio checked={value === radioData.value}\n                                                                              name={name} {...radioData}\n                                                                              key={radioData.id}\n                                                                              onChange={onChange}/>), [radiosData, value, name, onChange])\n    return (\n        <div\n            className={`habitica-subtasks-helper-radio-group ${className}`}\n            {...rest}\n        >\n            {renderRadios()}\n        </div>\n    );\n}\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgGithub(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 438 438\",\n    style: {\n      enableBackground: \"new 0 0 438 438\"\n    },\n    xmlSpace: \"preserve\",\n    fill: \"hsl(0, 0%, 77%)\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M409.132,114.573c-19.608-33.596-46.205-60.194-79.798-79.8C295.736,15.166,259.057,5.365,219.271,5.365 c-39.781,0-76.472,9.804-110.063,29.408c-33.596,19.605-60.192,46.204-79.8,79.8C9.803,148.168,0,184.854,0,224.63 c0,47.78,13.94,90.745,41.827,128.906c27.884,38.164,63.906,64.572,108.063,79.227c5.14,0.954,8.945,0.283,11.419-1.996 c2.475-2.282,3.711-5.14,3.711-8.562c0-0.571-0.049-5.708-0.144-15.417c-0.098-9.709-0.144-18.179-0.144-25.406l-6.567,1.136 c-4.187,0.767-9.469,1.092-15.846,1c-6.374-0.089-12.991-0.757-19.842-1.999c-6.854-1.231-13.229-4.086-19.13-8.559 c-5.898-4.473-10.085-10.328-12.56-17.556l-2.855-6.57c-1.903-4.374-4.899-9.233-8.992-14.559 c-4.093-5.331-8.232-8.945-12.419-10.848l-1.999-1.431c-1.332-0.951-2.568-2.098-3.711-3.429c-1.142-1.331-1.997-2.663-2.568-3.997 c-0.572-1.335-0.098-2.43,1.427-3.289c1.525-0.859,4.281-1.276,8.28-1.276l5.708,0.853c3.807,0.763,8.516,3.042,14.133,6.851 c5.614,3.806,10.229,8.754,13.846,14.842c4.38,7.806,9.657,13.754,15.846,17.847c6.184,4.093,12.419,6.136,18.699,6.136 c6.28,0,11.704-0.476,16.274-1.423c4.565-0.952,8.848-2.383,12.847-4.285c1.713-12.758,6.377-22.559,13.988-29.41 c-10.848-1.14-20.601-2.857-29.264-5.14c-8.658-2.286-17.605-5.996-26.835-11.14c-9.235-5.137-16.896-11.516-22.985-19.126 c-6.09-7.614-11.088-17.61-14.987-29.979c-3.901-12.374-5.852-26.648-5.852-42.826c0-23.035,7.52-42.637,22.557-58.817 c-7.044-17.318-6.379-36.732,1.997-58.24c5.52-1.715,13.706-0.428,24.554,3.853c10.85,4.283,18.794,7.952,23.84,10.994 c5.046,3.041,9.089,5.618,12.135,7.708c17.705-4.947,35.976-7.421,54.818-7.421s37.117,2.474,54.823,7.421l10.849-6.849 c7.419-4.57,16.18-8.758,26.262-12.565c10.088-3.805,17.802-4.853,23.134-3.138c8.562,21.509,9.325,40.922,2.279,58.24 c15.036,16.18,22.559,35.787,22.559,58.817c0,16.178-1.958,30.497-5.853,42.966c-3.9,12.471-8.941,22.457-15.125,29.979 c-6.191,7.521-13.901,13.85-23.131,18.986c-9.232,5.14-18.182,8.85-26.84,11.136c-8.662,2.286-18.415,4.004-29.263,5.146 c9.894,8.562,14.842,22.077,14.842,40.539v60.237c0,3.422,1.19,6.279,3.572,8.562c2.379,2.279,6.136,2.95,11.276,1.995 c44.163-14.653,80.185-41.062,108.068-79.226c27.88-38.161,41.825-81.126,41.825-128.906 C438.536,184.851,428.728,148.168,409.132,114.573z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGithub);\nexport default __webpack_public_path__ + \"static/media/github.b68d2508.svg\";\nexport { ForwardRef as ReactComponent };","import React, {createRef, useEffect} from \"react\";\nimport './modal.scss';\n\nexport type IModalContent = JSX.Element | string;\n\ninterface IProps {\n    api?: { add: (modalData: IModalContent) => string; remove: (id: string) => void; };\n    children?: JSX.Element | string;\n    id?: string;\n}\n\nconst Modal = ({children, id, api}: IProps): JSX.Element => {\n    const modalBackgroundRef = createRef<HTMLDivElement>();\n    useEffect(() => {\n        modalBackgroundRef.current.focus();\n    })\n\n    return <div className=\"habitica-subtasks-helper-modal-container\" ref={modalBackgroundRef} role=\"button\"\n                tabIndex={-1}\n                onClick={(event) => {\n                    const {target} = event;\n                    if (!(target instanceof Element)) return;\n                    if (!(target.classList.contains('habitica-subtasks-helper-modal__close-button') || target.classList.contains('habitica-subtasks-helper-modal-container'))) return;\n                    api.remove(id);\n                }\n                }\n                onKeyDown={(event) => {\n                    const isAllowedKey = event.ctrlKey || event.metaKey || event.shiftKey || event.altKey || event.code === \"Tab\" || event.code === \"F7\";\n                    if (!isAllowedKey) {\n                        api.remove(id);\n                    }\n                    if (event.code === \"Tab\") event.preventDefault();\n                }}\n    >\n        <div className=\"habitica-subtasks-helper-modal\">\n            <div className=\"habitica-subtasks-helper-modal__content\">{children}</div>\n            <button className=\"habitica-subtasks-helper-modal__close-button\" tabIndex={-1} type=\"button\"\n            >Press any key or click outside to close.\n            </button>\n        </div>\n    </div>\n}\n\nexport {Modal};\nexport type IModal = IProps;\n","import React, {FC, useEffect, useState} from \"react\";\nimport {IModal, IModalContent, Modal} from \"./Modal\";\nimport {uuidv4} from \"../../helpers\";\nimport {getScrollbarWidth} from \"../../helpers/getScrollBarWidth\";\nimport './modal.scss';\n\n\nexport interface IModalsStorageApi {\n    add: (modalData: IModalContent) => string;\n    remove: (id: string) => void;\n}\n\nexport const modalsStorageApi: IModalsStorageApi = {\n    add: null,\n    remove: null\n}\n\nexport const ModalsStorage: FC = () => {\n    const [modalsData, setModalsData] = useState<Omit<IModal, 'api'>[]>([]);\n    useEffect(() => {\n        const bodyStyle = document.body.style;\n        if (modalsData.length !== 0) {\n            const bodyPaddingRight = bodyStyle.paddingRight === \"\" ? 0 : parseInt(bodyStyle.paddingRight, 10);\n            bodyStyle.paddingRight = `${bodyPaddingRight + getScrollbarWidth()}px`;\n            bodyStyle.overflow = 'hidden';\n        } else {\n            bodyStyle.paddingRight = ``;\n            bodyStyle.overflow = '';\n        }\n    })\n    const add = (modalContent: IModalContent) => {\n        const id = uuidv4();\n        setModalsData((prevState => [...prevState, {children: modalContent, id}]));\n        return id;\n    }\n    const remove = (id) => {\n        setModalsData(prevState => prevState.filter(modalData => modalData.id !== id))\n    }\n    modalsStorageApi.add = add;\n    modalsStorageApi.remove = remove;\n    return <>{modalsData.map(modalData => <Modal api={modalsStorageApi} id={modalData.id}\n                                                 key={modalData.id}>{modalData.children}</Modal>)}</>\n}\n","export const getScrollbarWidth = (): number => window.innerWidth - document.documentElement.clientWidth;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgStar(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 40,\n    viewBox: \"0 0 40 40\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.9279 16L20.0679 0L15.2079 16H0.0678711L12.4279 24.82L7.72787 40L20.0679 30.62L32.4279 40L27.7279 24.82L40.0679 16H24.9279Z\",\n    fill: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgStar);\nexport default __webpack_public_path__ + \"static/media/star.fe730a00.svg\";\nexport { ForwardRef as ReactComponent };","import React, {FC, HTMLProps} from 'react';\nimport {ToastContainer} from \"react-toastify\";\nimport {Anchor} from \"../Anchor/Anchor\";\nimport {ReactComponent as GithubIcon} from '../../media/images/icons/github.svg'\nimport './header.scss';\n\n\ntype IProps = HTMLProps<HTMLDivElement>;\n\nexport const Header: FC = ({children, className = '', ...rest}: IProps) =>\n    <>\n        <div className={`header ${className}`} {...rest}>\n            <Anchor href=\"https://github.com/FreePhoenix888/Habitica-Subtasks-Helper\" rel=\"noopener noreferrer\"\n                    target=\"_blank\"><GithubIcon/></Anchor>\n            {children}\n        </div>\n        <ToastContainer/>\n    </>;\n","import React, {HTMLAttributes} from \"react\";\nimport './button.scss';\n\ntype IProps = HTMLAttributes<HTMLButtonElement>;\n\nexport const Button = ({className, ...rest}: IProps): JSX.Element => <button {...rest}\n                                                                             className={`habitica-subtasks-helper-button ${className}`}\n                                                                             type=\"button\"/>;\n","import React, {ComponentProps, FC} from \"react\";\nimport {Button} from \"./Button\";\n\ntype IProps = ComponentProps<typeof Button>;\n\nexport const InfoButton: FC<IProps> = ({className, ...rest}) => <Button\n    className={`habitica-subtasks-helper-info-button ${className}`} {...rest}>?</Button>","import React, {HTMLProps} from \"react\";\nimport {setClassName} from \"../../helpers\";\n\ntype IProps = Omit<HTMLProps<HTMLButtonElement>, 'type'>;\n\nexport const SubmitButton = (props: IProps): JSX.Element => {\n    const {className, ...rest} = props;\n    return <button className={setClassName(`habitica-subtasks-helper-button ${className}`)} type=\"submit\" {...rest}/>\n}","import React, {\n    ComponentProps,\n    FormEvent,\n    forwardRef,\n    useCallback,\n    useEffect,\n    useImperativeHandle,\n    useRef,\n} from \"react\";\nimport {Input} from './Input'\n\ntype IProps = ComponentProps<typeof Input>;\n\nexport const InputAutoSize = forwardRef<HTMLInputElement, IProps>(({\n                                                                       onInput: onInputProp,\n                                                                       classNameModifiers,\n                                                                       ...rest\n                                                                   }: IProps, forwardedRef) => {\n    const ref = useRef<HTMLInputElement>();\n    const setSize = useCallback(() => {\n        if (!ref.current) return;\n        const input = ref.current;\n        const {value} = input;\n        let {length} = value;\n        if (!length) length = input.placeholder.length;\n        input.size = length;\n    }, [ref])\n\n    useEffect(() => {\n        setSize();\n    }, [setSize])\n\n    useImperativeHandle<HTMLInputElement, HTMLInputElement>(forwardedRef, () => ref.current)\n\n    const onInput = useCallback((event: FormEvent<HTMLInputElement>) => {\n        // Default behavior\n        setSize();\n        // Custom behavior\n        if (onInputProp) {\n            onInputProp(event);\n        }\n    }, [onInputProp, setSize])\n\n    return <Input classNameModifiers={{'auto-size': true, ...classNameModifiers}} ref={ref}\n                  onInput={onInput} {...rest} />\n})\n\nInputAutoSize.displayName = \"HabiticaSubtasksHelperInputAutoSize\"\n","import React, {FC, useCallback, useEffect, useState} from 'react';\nimport {\n    Code,\n    Controller,\n    Form,\n    Header,\n    InfoButton,\n    Input,\n    InputErrorMessage,\n    Label,\n    ModalsStorage,\n    modalsStorageApi,\n    Paragraph,\n    RadioGroup,\n    SubmitButton,\n    TextArea,\n    toast,\n    Tooltip,\n    useForm\n} from '../../components';\nimport {ReactComponent as StarSVG} from '../../media/images/icons/star.svg';\nimport './App.scss';\nimport {InputAutoSize} from \"../Input/InputAutoSize\";\nimport {useLocalStorage} from \"../../helpers\";\nimport {Response} from \"express\";\n\nconst App: FC = () => {\n    const [remainedRequestsLimit, setRemainedRequestsLimit] = useState(30);\n    const [isPersonalDataUsingAccepted, setIsPersonalDataUsingAccepted] = useLocalStorage('isPersonalDataUsingAccepted', false);\n    useEffect(() => {\n        if (!isPersonalDataUsingAccepted) {\n            setTimeout(() => {\n                modalsStorageApi.add(<div>\n                    <Paragraph>App uses your browser local storage to preserve data of\n                        some input fields to save your time.</Paragraph>\n                    <strong>By staying in the app you agree to this.</strong>\n                </div>);\n                setIsPersonalDataUsingAccepted(true);\n            }, 5000)\n        }\n    }, [isPersonalDataUsingAccepted, setIsPersonalDataUsingAccepted])\n    type IFormElements = {\n        amount: number;\n        apiToken: string;\n        notes: string;\n        priority: number;\n        separator: string;\n        subtasks: string;\n        title: string;\n        type: string;\n        userId: string;\n    }\n    const [userId, setUserId] = useLocalStorage('userId', '');\n    const [apiToken, setApiToken] = useLocalStorage('apiToken', '');\n\n    const {register, control, handleSubmit, formState: {errors}} = useForm<IFormElements>({\n        defaultValues: {\n            userId,\n            apiToken\n        }\n    });\n\n    const getSubtasks = useCallback((subtasks: string, separator: string) => {\n        if (!separator) return null;\n        return subtasks.split(separator).map((subtask) => subtask.trim());\n    }, [])\n\n    return <div className=\"app\">\n        <ModalsStorage/>\n        <Tooltip/>\n        <Header/>\n        <div className=\"container\">\n            <h1>Habitica Subtasks Helper</h1>\n            <Form action=\"\" className=\"habitica-subtasks-helper-form\" onChange={() => {\n                console.log('change')\n            }}\n                  onSubmit={handleSubmit((data) => {\n                      const {userId, apiToken, title: text, type, notes, priority, subtasks, separator, amount} = data;\n                      setUserId(userId);\n                      setApiToken(apiToken);\n                      const headers = {\n                          'Content-Type': 'application/json',\n                          'x-client': '59322894-0bd9-45f1-af35-4ceffcd76fac-HabiticaSubtasksHelper',\n                          'x-api-user': userId,\n                          'x-api-key': apiToken,\n                      };\n                      const processedSubtasks = getSubtasks(subtasks, separator);\n                      const body = JSON.stringify({\n                          text,\n                          type,\n                          priority,\n                          notes,\n                          checklist: processedSubtasks\n                      });\n                      const promises: Promise<Response>[] = [];\n                      let successfullRequests = 0;\n                      for (let i = 0; i < amount; i++) {\n                          promises.push(new Promise((resolve, reject) => {\n                              void fetch('https://habitica.com/api/v3/tasks/user', {\n                                  method: 'POST',\n                                  headers,\n                                  body\n                              })\n                                  .then(async (response) => {\n                                      const responseBody = await response.json() as { data: { message: string }, success: string };\n                                      if (!response.ok) reject(responseBody);\n                                      const remainingRequestsAmount = Number(response.headers.get('X-RateLimit-Remaining'));\n                                      const remainingRequestsAmountResetDate = new Date(response.headers.get('X-RateLimit-Reset'));\n                                      setRemainedRequestsLimit(remainingRequestsAmount);\n                                      setTimeout(() => {\n                                          setRemainedRequestsLimit(30)\n                                      }, remainingRequestsAmountResetDate.getTime() - new Date().getTime())\n                                      successfullRequests++;\n                                      resolve(responseBody);\n                                  })\n                          }));\n                      }\n                      Promise.all(promises)\n                          .then(() => {\n                              toast(<p>Success</p>, {type: 'success'});\n                          })\n                          .catch((error: { error: string; message: string }) => {\n                              console.log(error);\n                              if (error.error === \"TooManyRequests\") {\n                                  toast(<p\n                                      style={{wordBreak: 'break-word'}}>Requests limit reached. Successfully\n                                      added: {successfullRequests}</p>, {\n                                      type: 'error',\n                                  })\n                              } else {\n                                  toast(<p\n                                      style={{wordBreak: 'break-word'}}>{error.message}</p>, {\n                                      type: 'error',\n                                  })\n                              }\n                          })\n\n                  })}>\n                <div className=\"habitica-subtasks-helper-form__section\">\n                    <Label className=\"title__label\" htmlFor=\"title\">\n                        Title\n                    </Label>\n                    <Input autoComplete=\"off\"\n                           className=\"title__input\"\n                           id=\"title\"\n                           name=\"title\"\n                           placeholder=\"The Venus Project Conception.\"\n                           {...register('title', {required: 'Title is required'})}\n                    />\n                    {errors.title && <InputErrorMessage>{errors.title.message}</InputErrorMessage>}\n                </div>\n                <div className=\"habitica-subtasks-helper-form__section\">\n                    <Label className=\"subtasks__label\" htmlFor=\"subtasks\">\n                        Subtasks\n                    </Label>\n                    <TextArea autoComplete=\"off\"\n                              className=\"subtasks__textarea\"\n                              id=\"subtasks\"\n                              placeholder={`What is the Venus Project?\n\t\t\t\t\t\t\t\tAims, Proposals.\n\t\t\t\t\t\t\t\tFAQ.\n\t\t\t\t\t\t\t\tFree e-Books.\n\t\t\t\t\t\t\t\tRecommended books.`}\n                              rows={10}\n                              wrap=\"soft\"\n                              {...register('subtasks')}\n                    />\n\n                </div>\n                <div className=\"habitica-subtasks-helper-form__section\">\n                    <div className=\"label-section\">\n                        <Label className=\"separator__label label-section__label\" htmlFor=\"separator\">\n                            Separator\n                        </Label>\n                        <InfoButton className=\"separator__info-button label-section__info-button\" onClick={() => {\n                            modalsStorageApi.add(<div>\n                                <div>You can use any symbols or <Code>regular expression</Code> to separate your\n                                    subtasks.\n                                </div>\n                                <b>Subtasks:</b> <Code>What is the Venus Project?;Aims, Proposals.;FAQ.</Code><br/>\n                                <div><b>Separator:</b> <Code>;</Code></div>\n                                <div><b>Result:</b></div>\n                                <ul>\n                                    <li>What is the Venus Project?</li>\n                                    <li>Aims, Proposals.</li>\n                                    <li>FAQ.</li>\n                                </ul>\n                            </div>)\n                        }}/>\n                    </div>\n                    <InputAutoSize autoComplete=\"off\"\n                                   className=\"separator__input\"\n                                   defaultValue=''\n                                   id=\"separator\"\n                                   name=\"separator\"\n                                   placeholder=\"\\n\"\n                                   {...register('separator')}\n                    />\n                </div>\n                <div className=\"habitica-subtasks-helper-form__section\">\n                    <Label className=\"notes__label\" htmlFor=\"notes\">\n                        Notes\n                    </Label>\n                    <TextArea autoComplete=\"off\"\n                              className=\"notes__textarea\"\n                              id=\"notes\"\n                              name=\"notes\"\n                              placeholder=\"Read it without any prejudices as any new ideas.\"\n                              rows={10}\n                              wrap=\"soft\"\n                              {...register('notes')}\n                    />\n                </div>\n                <div className=\"habitica-subtasks-helper-form__section priority\">\n                    <Label htmlFor=\"priority1\">Difficulty</Label>\n                    <Controller control={control}\n                                defaultValue={1}\n                                name=\"priority\"\n                                render={({field: {onChange, value, name}}) => <RadioGroup\n                                    className=\"priority__radio-group\"\n                                    name={name}\n                                    radiosData={[\n                                        {\n                                            value: 0.1,\n                                            children: <StarSVG/>,\n                                            id: 'priority0.1'\n                                        },\n                                        {\n                                            value: 1,\n                                            children: <>\n                                                <StarSVG/><StarSVG/></>,\n                                            id: 'priority1'\n                                        },\n                                        {\n                                            value: 1.5,\n                                            children: <>\n                                                <StarSVG/><StarSVG/><StarSVG/></>,\n                                            id: 'priority1.5'\n                                        },\n                                        {\n                                            value: 2,\n                                            children: <>\n                                                <StarSVG/><StarSVG/><StarSVG/><StarSVG/></>,\n                                            id: 'priority2'\n                                        }\n                                    ]}\n                                    value={value}\n                                    onChange={(event) => onChange(parseFloat(event.currentTarget.value))}\n                                />} rules={{required: 'Difficult is required'}}/>\n                </div>\n                <div className=\"habitica-subtasks-helper-form__section\">\n                    <Label htmlFor=\"todo\">Type</Label>\n                    <Controller control={control}\n                                defaultValue='todo'\n                                name=\"type\"\n                                render={({field: {onChange, value, name}}) => <RadioGroup\n                                    className=\"type__radio-group type-radio-group\"\n                                    name={name}\n                                    radiosData={[\n                                        {value: 'todo', children: \"Todo\", id: \"task-type-todo\"},\n                                        {value: 'daily', children: \"Daily\", id: \"task-type-daily\"},\n                                        {value: 'habit', children: \"Habit\", id: \"task-type-habit\"},\n                                    ]}\n                                    value={value}\n                                    onChange={onChange}\n                                />} rules={{required: 'Type is required'}}/>\n                </div>\n                <div className=\"habitica-subtasks-helper-form__section habitica-subtasks-helper-form-section\">\n                    <div className=\"label-section\">\n                        <Label className=\"amount__label\" htmlFor=\"amount\">\n                            Amount\n                        </Label>\n                        <InfoButton data-effect=\"solid\"\n                                    data-place=\"top\"\n                                    data-tip=\"You can add the same task multiple times. Limit is 30 per minute\"/>\n                    </div>\n                    <Input\n                        autoComplete=\"off\"\n                        className=\"amount__input\"\n                        defaultValue={1}\n                        id=\"amount\"\n                        name=\"amount\"\n                        placeholder=\"1\"\n                        type=\"number\"\n                        {...register('amount', {\n                            valueAsNumber: true, validate: (value) => {\n                                if (Number.isNaN(value)) return 'Value must be a number';\n                            },\n                            max: {\n                                value: remainedRequestsLimit,\n                                message: `Remained requests limit is ${remainedRequestsLimit}`\n                            },\n                            min: {value: 1, message: 'Min value is 1'}\n                        })}\n                    />\n                    {errors.amount && <InputErrorMessage>{errors.amount.message}</InputErrorMessage>}\n                </div>\n                <div className=\"habitica-subtasks-helper-form__section\">\n                    <div className=\"label-section\">\n                        <Label className=\"label-section__label\" htmlFor=\"userId\">\n                            User ID\n                        </Label>\n                        <InfoButton className=\"label-section__info-button\" onClick={() => {\n                            window.open('https://habitica.com/user/settings/api', '_blank').focus()\n                        }}/>\n                    </div>\n                    <Input autoComplete=\"off\" id=\"userId\"\n                           name=\"userId\" {...register('userId', {required: 'User ID is required'})} />\n                    {errors.userId && <InputErrorMessage>{errors.userId.message}</InputErrorMessage>}\n                </div>\n                <div className=\"habitica-subtasks-helper-form__section\">\n                    <div className=\"label-section\">\n                        <Label className=\"label-section__label\" htmlFor=\"apiToken\">\n                            API Token:\n                        </Label>\n                        <InfoButton className=\"label-section__info-button\" onClick={() => {\n                            window.open('https://habitica.com/user/settings/api', '_blank').focus()\n                        }}/>\n                    </div>\n\n                    <Input autoComplete=\"off\"\n                           id=\"apiToken\"\n                           name=\"apiToken\" {...register('apiToken', {required: 'API token is required'})} />\n                    {errors.apiToken && <InputErrorMessage>{errors.apiToken.message}</InputErrorMessage>}\n                </div>\n                <div className=\"submit-section\">\n                    <SubmitButton className={`submit-button`} data-disabled={remainedRequestsLimit === 0}\n                                  data-effect=\"solid\"\n                                  data-place=\"top\" data-tip=\"Requests limit reached\"\n                                  data-tip-disable={remainedRequestsLimit !== 0}\n                                  data-type=\"error\">\n                        Create\n                    </SubmitButton>\n                </div>\n            </Form>\n        </div>\n    </div>;\n}\n\n/*\n<ModalButtonInfo\n    className=\"separator__modal\"\n    setIsOpen={() => {\n        api.add({\n            children: <>\n                You can use any symbols or regular expression to break your text into\n                parts.<br/>\n                Example:<br/>\n                <b>Subtasks:</b> Brush teeth, Take a bath, Training, Learning<br/>\n                <b>Separator:</b> <code>,</code><br/>\n                <b>Result:</b>\n                <ul style={{margin: 0}}>\n                    <li>Brush teeth</li>\n                    <li>Take a bath</li>\n                    <li>Training</li>\n                    <li>Learning</li>\n                </ul>\n            </>\n        })\n    }}\n/> */\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport 'normalize.css';\nimport './styles/index.scss';\nimport App from './components/App/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}